spring.application.name=order-service
server.port=9001
#logs enahancement
logging.pattern.console="[Kafka Order] %clr(%d{HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:%5p}) %clr(---){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
spring.main.banner-mode=OFF

#h2 config
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:kafkaorderdb
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#kafka producer config starts
#spring.kafka.listener.missing-topics-fatal=false

spring.kafka.producer.bootstrap-servers=localhost:9092

#considering key as stirng nad value as json, this saves us in writing boilerplate code to convert object to string
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#kafka producer config ends

#kafka consumer config starts
#mandatory for consumer
spring.kafka.consumer.group-id=kafka-order-cg
#offset updates automatically
spring.kafka.consumer.enable-auto-commit=true
#smart offset picking for consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer 
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.learning.kafka.messages
#kafka consumer config ends
