spring.application.name=library-events-consumer-ssl
server.port=1001
#h2 config
spring.h2.console.enabled=true
spring.datasource.url=jdbc:h2:mem:library-events
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

#kafka consumer config starts
#mandatory for consumer
spring.kafka.consumer.group-id=library-events-cg
#offset updates automatically
# in cae of manual auto commit make it false
spring.kafka.consumer.enable-auto-commit=false
#smart offset picking for consumer
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.auto-offset-reset=earliest

spring.kafka.consumer.bootstrap-servers=localhost:9095,localhost:9096,localhost:9097
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer 
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.learning.kafka.messages
#kafka consumer config ends

#SSL config starts

spring.kafka.consumer.ssl.trust-store-location=file:C:/Kanishk/learning/spring-kafka/ssl-files/client.truststore.jks
spring.kafka.consumer.ssl.trust-store-password=jaishreeram

spring.kafka.consumer.ssl.key-store-location=file:C:/Kanishk/learning/spring-kafka/ssl-files/client.keystore.jks
spring.kafka.consumer.ssl.key-store-password=jaishreeram

spring.kafka.consumer.properties.security.protocol=SSL
#empty so that https is not used
spring.kafka.consumer.properties.ssl.endpoint.identification.algorithm=


#SSL config ends
#
