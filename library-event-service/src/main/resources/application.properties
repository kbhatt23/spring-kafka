spring.application.name=library-event-service
server.port=9009

#kafka producer config starts
#spring.kafka.listener.missing-topics-fatal=false

spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094

#considering key as stirng nad value as json, this saves us in writing boilerplate code to convert object to string
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#without below property , auto creation of topic do not happen in multi broker cluster
spring.kafka.admin.properties.bootstrap.servers=localhost:9092,localhost:9093,localhost:9094

# adding below config to demonstarte producer config properties
spring.kafka.producer.properties.acks=all
#retry is integer.maxint value by default
spring.kafka.producer.properties.retries=50
# making retry back off to 5 seconds so that other brokers get time to be up and fulfil min.replicas proeperty in cluster
spring.kafka.producer.properties.retry.backoff.ms=1000


#kafka producer config ends

# added as above spring boot 2.x this flag is false by default
spring.kafka.consumer.enable-auto-commit=true

spring.kafka.consumer.properties.spring.json.trusted.packages=com.learning.kafka.messages


#added just for learning -> to demonstrate @configurationproperties properties beocmes auto complete visible in application.properties 
self.learning.age=23
