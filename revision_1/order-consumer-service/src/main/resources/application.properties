spring.application.name=order-consumer-service
server.port=7001

#kafka producer config starts
#spring.kafka.listener.missing-topics-fatal=false

spring.kafka.producer.bootstrap-servers=localhost:9092

#considering key as stirng nad value as json, this saves us in writing boilerplate code to convert object to string
#during dead letter topic and order acknowledgement flow it needs kafka template and producer logic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#kafka producer config ends

#kafka consumer config starts
#also acting as consumer while reading from order acklowedge topic
#mandatory for consumer
spring.kafka.consumer.group-id=kafka-order-cg
#offset updates automatically
spring.kafka.consumer.enable-auto-commit=true
#smart offset picking for consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer 
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.LongDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.learning.messages