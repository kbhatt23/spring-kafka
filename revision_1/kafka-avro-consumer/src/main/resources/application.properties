spring.application.name=kafka-avro-consumer
server.port=6001

#kafka producer config starts
#spring.kafka.listener.missing-topics-fatal=false

spring.kafka.producer.bootstrap-servers=localhost:9092


#kafka consumer config starts
#also acting as consumer while reading from order acklowedge topic
#mandatory for consumer
spring.kafka.consumer.group-id=kafka-avro-consumer
#offset updates automatically
spring.kafka.consumer.enable-auto-commit=true
#smart offset picking for consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer 
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.LongDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties.schema.registry.url=http://localhost:8081
spring.kafka.consumer.properties.specific.avro.reader=true


spring.kafka.consumer.properties.spring.json.trusted.packages=com.learning.avro